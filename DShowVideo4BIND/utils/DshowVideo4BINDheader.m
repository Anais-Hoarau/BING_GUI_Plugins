function [methodinfo,structs,enuminfo,ThunkLibName]=DshowVideo4BINDheader
%DSHOWVIDEO4BINDHEADER Create structures to define interfaces found in 'DshowVideo4BIND'.

%This function was generated by loadlibrary.m parser version 1.1.6.32 on Thu Aug 19 13:42:00 2010
%perl options:'DshowVideo4BIND.i -outfile=DshowVideo4BINDheader.m'
ival={cell(1,0)}; % change 0 to the actual number of functions to preallocate the data.
structs=[];enuminfo=[];fcnNum=1;
fcns=struct('name',ival,'calltype',ival,'LHS',ival,'RHS',ival,'alias',ival);
ThunkLibName=[];
% extern " C "  int LoadVideo ( char * videofile , int hide , char * wdw_name ); 
fcns.name{fcnNum}='LoadVideo'; fcns.calltype{fcnNum}='cdecl'; fcns.LHS{fcnNum}='int32'; fcns.RHS{fcnNum}={'cstring', 'int32', 'cstring'};fcnNum=fcnNum+1;
% extern " C "  void SetPosition ( int video_id , float position ); 
fcns.name{fcnNum}='SetPosition'; fcns.calltype{fcnNum}='cdecl'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32', 'single'};fcnNum=fcnNum+1;
% extern " C "  void UnloadVideo ( int video_id ); 
fcns.name{fcnNum}='UnloadVideo'; fcns.calltype{fcnNum}='cdecl'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% extern " C "  float GetDuration ( int video_id ); 
fcns.name{fcnNum}='GetDuration'; fcns.calltype{fcnNum}='cdecl'; fcns.LHS{fcnNum}='single'; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
% extern " C "  bool NoMoreVideo (); 
fcns.name{fcnNum}='NoMoreVideo'; fcns.calltype{fcnNum}='cdecl'; fcns.LHS{fcnNum}='uint8'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% extern " C "  void SetWindowPosition ( int video_id , char * wdw_pos ); 
fcns.name{fcnNum}='SetWindowPosition'; fcns.calltype{fcnNum}='cdecl'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32', 'cstring'};fcnNum=fcnNum+1;
% extern " C "  void OverlayText ( int video_id , char * text , char * position , int font_width , int rgb [ 3 ]); 
fcns.name{fcnNum}='OverlayText'; fcns.calltype{fcnNum}='cdecl'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32', 'cstring', 'cstring', 'int32', 'int32Ptr'};fcnNum=fcnNum+1;
% extern " C "  void ScreenCapture ( int video_id , char * output ); 
fcns.name{fcnNum}='ScreenCapture'; fcns.calltype{fcnNum}='cdecl'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32', 'cstring'};fcnNum=fcnNum+1;
% extern " C "  void SetForeground ( int video_id ); 
fcns.name{fcnNum}='SetForeground'; fcns.calltype{fcnNum}='cdecl'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}={'int32'};fcnNum=fcnNum+1;
methodinfo=fcns;