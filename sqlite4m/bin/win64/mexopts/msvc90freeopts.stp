#  $Revision: 1.1.8.2 $
#  Copyright 2008 The MathWorks, Inc.

sub msvc90freeopts 
{
    my $input = shift;
    my $default_location = "C:\\Program Files (x86)\\Microsoft Visual Studio 9.0";
    my $sdk_dir = "";
    my $registry_lookup_fcn = $input->{"registry_lookup"};

    # Attempt to find the Windows sdk that corresponds to VS2008
    my $sdk_dir =  &$registry_lookup_fcn("SOFTWARE\\Microsoft\\Microsoft SDKs\\Windows\\" , "CurrentInstallFolder");

    my @language_handled = ('C');
    my $locate_fcn = sub {
        my @msvc9_roots = ();
        my $msvc9_root;
        
        # Check install and location using the 32-bit CL.EXE; check for 64-bit
        # compiler later.  This allows 32-bit-only installs to appear as 
        # installed, then throw an error at selection-time.  
        # This is easier to debug than not listing the compiler.
        
        # Search the default environment variable location. 
        # Since MSVC 2008 Professional ed. and the Express ed.
        # use the same environment variable (VS90COMNTOOLS),
        # use the directory structure to differentiate between the two.
        if ($ENV{'VS90COMNTOOLS'} ne "" &&  
            -e "$ENV{'VS90COMNTOOLS'}\\..\\..\\VC\\bin\\cl.exe" &&
            -e "$ENV{'VS90COMNTOOLS'}\\..\\IDE\\VCExpress.exe"){ 
            $msvc9_root = $ENV{'VS90COMNTOOLS'}; 
            $msvc9_root =~ s|\\+Common7\\+Tools\\*$||i; 

            $oldPath = $ENV{'PATH'};
            $ENV{'PATH'} = "$msvc9_root\\Common7\\IDE;$oldPath";
            if (&correct_version("$msvc9_root\\VC\\bin\\cl.exe","15.0")){ 
                push(@msvc9_roots, $msvc9_root); 
            }
            $ENV{'PATH'} = "$oldPath";
        }

        # Search the registry. 
        $msvc9_root = &$registry_lookup_fcn("SOFTWARE\\Microsoft\\VCExpress\\9.0\\" . 
                                            "Setup\\VS", "ProductDir");
        if (-e "$msvc9_root\\bin\\cl.exe"){ 
            $msvc9_root =~ s|\\VC\\$||i; 

            $oldPath = $ENV{'PATH'};
            $ENV{'PATH'} = "$msvc9_root\\Common7\\IDE;$oldPath";
            if (&correct_version("$msvc9_root\\VC\\bin\\cl.exe","15.0")){ 
                push(@msvc9_roots, $msvc9_root); 
            } 
            $ENV{'PATH'} = "$oldPath";
        }

        # Search the default install location.
        if (-e "$default_location\\VC\\bin\\cl.exe" &&
            -e "$default_location\\Common7\\IDE\\VCExpress.exe"){ 
            $oldPath = $ENV{'PATH'};
            $ENV{'PATH'} = "$default_location\\Common7\\IDE;$oldPath";
            if (&correct_version("$default_location\\VC\\bin\\cl.exe","15.0")){ 
                push(@msvc9_roots, $default_location); 
            } 
            $ENV{'PATH'} = "$oldPath";
        }

        return @msvc9_roots;
    };

    my $root_val = sub {
        my $erred = 0;
        my $base_directory = shift;
        if (!-e "$base_directory\\VC\\bin\\amd64\\cl.exe"){
            print "\n*****************************************************************************\n" .
                  "  Error: Could not find the 64-bit compiler.  This may indicate that the \n" .
                  "         \"X64 Compilers and Tools\" or the Microsoft Windows Software \n" .
                  "         Development Kit (SDK) is not installed.  To build 64-bit MEX-files \n" .
                  "         Microsoft Visual C++ 2008 Express Edition requires that these two \n" .
                  "         packages are installed properly. \n" .
                  "*****************************************************************************\n";
            $erred = 1;
        }
        my $sdk_location = &$registry_lookup_fcn("SOFTWARE\\Microsoft\\Microsoft SDKs\\Windows\\" , 
                                  "CurrentInstallFolder");
        if ($sdk_location eq "" ||
            !-e "$sdk_location\\bin\\mt.exe"){
            print "\n*****************************************************************************\n" .
                  "  Error: Could not find the Microsoft Windows Software Development Kit (SDK). \n" .
                  "         This may indicate that the Microsoft Windows SDK or the \n" .
                  "         \"X64 Compilers and Tools\" is not installed.  To build 64-bit \n" .
                  "         MEX-files Microsoft Visual C++ 2008 Express Edition requires that \n" .
                  "         these two packages are installed properly. \n" .
                  "*****************************************************************************\n";
            $erred = 1;
        }
        
        if (!$erred) {
            print "\n***************************************************************************\n" .
                  "  Warning: MEX-files generated using Microsoft Visual C++ 2008 require\n" .
                  "           that Microsoft Visual Studio 2008 run-time libraries be \n" .
                  "           available on the computer they are run on.\n" .
                  "           If you plan to redistribute your MEX-files to other MATLAB\n" .
                  "           users, be sure that they have the run-time libraries.\n" . 
                  "***************************************************************************\n";
            return $base_directory;
        } else {
            return;
        }
            
    };

# In the case of the VS2008 compiler the link_val key is used to specify
# the location of the SDK

    return {
        "vendor_name"      => "Microsoft Visual C++ 2008 Express",
        "version"          => "",                          #This version is left blank intentionally.
        "group_id"         => "MSVC",
        "serial"           => 6.01,
        "root_var"         => "VSINSTALLDIR",
        "optfile_name"     => "msvc90freeopts.bat",
        "default_location" => $default_location,
        "language_handled" => \@language_handled,
        "root_val"         => $root_val,
        "link_val"         => $sdk_dir,
        "locate"           => $locate_fcn,
        };
}
1;
